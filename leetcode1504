//https://leetcode.com/problems/count-submatrices-with-all-ones/discuss/720265/Java-Detailed-Explanation-From-O(MNM)-to-O(MN)-by-using-Stack
class Solution {
    public int numSubmat(int[][] mat) {
        int n,m,res = 0;
        if((n = mat.length) == 0)
            return res;
        m = mat[0].length;
        int []h = new int[m];// no of consecutive ones in column i
        for(int i = 0 ; i < n ; i++){
            for(int j = 0 ; j < m ; j++){
                if(mat[i][j] == 0)
                    h[j] = 0;
                else
                    h[j] += mat[i][j];
            }
            //calculate no of rectangles
            Stack<Integer> s = new Stack();
            int []sum = new int[m];
            for(int j = 0 ; j < m ; j++){
                while(!s.isEmpty() && h[s.peek()] >= h[j]) 
                    s.pop();
                if(!s.isEmpty()){
                    int preIndex = s.peek();
                    sum[j] = sum[preIndex];
                    sum[j] += h[j] * (j - preIndex);
                }
                else{
                    sum[j] += h[j] * (j + 1);// index start with zero
                }
                s.push(j);
            }
            for(int x : sum)
                res += x;
        }
        return res;
    }
}
/*
[[1,0,1],[1,1,0],[1,1,0]]
[[0,1,1,0],[0,1,1,1],[1,1,1,0]]
[[1,1,1,1,1,1]]
[[1,0,1],[0,1,0],[1,0,1]]
[[0,1,1,0],[0,1,1,1],[1,1,1,0]]
*/
